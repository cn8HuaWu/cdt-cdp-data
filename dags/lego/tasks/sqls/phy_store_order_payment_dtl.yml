Staging:
  src_columns:
    parent_order_id text,
    original_order_id text,
    payment_time text,
    distributor text,
    lego_store_code text,
    distributor_store_code text,
    store_name text,
    member_id text,
    return_type text,
    actual_order_amt text,
    payment_type text,
    part_payment_amt text,
    exchange_rate text,
    cost_point text,
    operator_id text,
    note text,
    sendout_time text 

ODS:    

EDW:
  create_table_query:
    CREATE TABLE IF NOT EXISTS edw.f_phy_store_order_payment_dtl (
      parent_order_id varchar(255) NULL,
      payment_time timestamp NULL,
      distributor varchar(255) NULL,
      lego_store_code varchar(255) NULL,
      distributor_store_code varchar(255) NULL,
      store_name varchar(255) NULL,
      member_id varchar(255) NULL,
      return_type varchar(255) NULL,
      original_order_id varchar(255) NULL,
      actual_order_amt decimal(17,2) NULL,
      payment_type varchar(255) NULL,
      part_payment_amt decimal(17,2) NULL,
      exchange_rate decimal(10,5) NULL,
      cost_point decimal(15) NULL,
      operator_id varchar(255) NULL,
      note varchar(600) NULL,
      sendout_time timestamp NULL,
      dl_batch_date varchar(8),
      dl_load_time timestamp
    )distributed by (distributor,distributor_store_code,parent_order_id,payment_type);

  insert_edw_from_ods_query:
    insert into edw.f_phy_store_order_payment_dtl(
      parent_order_id,
      payment_time,
      distributor,
      lego_store_code,
      distributor_store_code,
      store_name,
      member_id,
      return_type,
      original_order_id,
      actual_order_amt,
      payment_type,
      part_payment_amt,
      exchange_rate,
      cost_point,
      operator_id,
      note,
      sendout_time,
      dl_batch_date,
      dl_load_time
    )
    select 
      parent_order_id,
      TIMESTAMP WITH TIME ZONE 'epoch' + payment_time::decimal(13) * INTERVAL '1 s',
      upper(distributor),
      case when trim(lego_store_code) in('','null') then null else lego_store_code end as lego_store_code,
      distributor_store_code,
      store_name,
      member_id,
      return_type,
      case when trim(original_order_id) in('','null') then null else original_order_id end as original_order_id,
      actual_order_amt::decimal(17,2),
      payment_type,
      part_payment_amt::decimal(17,2),
      exchange_rate::decimal(17,2),
      cost_point::decimal(15,0),
      operator_id,
      note,
      TIMESTAMP WITH TIME ZONE 'epoch' + sendout_time::decimal(13) * INTERVAL '1 s',
      dl_batch_date,
      dl_load_time
    from (
      select * , row_number() over( partition by upper(distributor), distributor_store_code,parent_order_id, payment_type order by (TIMESTAMP WITH TIME ZONE 'epoch' + sendout_time::decimal(13) * INTERVAL '1 s') desc ) rk
      from ods.r_phy_store_order_payment_dtl
    )ab
    where rk=1;

  update_by_phy_store:
    update edw.f_phy_store_order_payment_dtl o
    set lego_store_code = s.lego_store_code 
    from edw.f_phy_store s
    where o.distributor_store_code  = s.distributor_store_code 
    and o.distributor = s.distributor 
    and lower(o.distributor) ='lewin'
    and (o.lego_store_code is null or trim(o.lego_store_code) ='')
    and s.lego_store_code is not null;