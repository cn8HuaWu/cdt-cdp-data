Staging:
  src_file_list:
    # TM_201912.xlsx,
    # TM_202001.xlsx
  src_columns:
    parent_order_id text,
    shopper_nickname text,
    shopper_alipay_account text,
    payment_no text,
    payment_detail text,
    payable_amount text,
    postage text,
    paid_points text,
    total_amount text,
    rebated_points text,
    actual_payment_amount text,
    actual_paid_points text,
    order_status text,
    shopper_comments text,
    cosignee_name text,
    consinee_address text,
    type_of_delivery text,
    consinee_telephone text,
    consinee_mobile text,
    order_create_time text,
    order_payment_time text,
    product_title text,
    product_category text,
    total_pieces text,
    shopid text,
    shop_name text

ODS:

EDW:
  create_table_query:
    create table if not exists edw.f_tm_order_his(
      parent_order_id varchar(255),
      shopper_nickname varchar(255),
      shopper_alipay_account varchar(255),
      payment_no varchar(255),
      payment_detail varchar(255),
      payable_amount decimal(17,6),
      postage decimal(17,6),
      paid_points decimal(11),
      total_amount decimal(17,6),
      rebated_points decimal(17,6),
      actual_payment_amount decimal(17,6),
      actual_paid_points decimal(11),
      order_status varchar(255),
      shopper_comments varchar(500),
      cosignee_name varchar(255),
      consinee_address varchar(255),
      type_of_delivery varchar(255),
      consinee_telephone varchar(255),
      consinee_mobile varchar(255),
      order_create_time timestamp,
      order_payment_time timestamp,
      product_title varchar(3000),
      product_category varchar(255),
      total_pieces decimal(11),
      shopid varchar(255),
      shop_name varchar(255),
      dl_batch_date varchar(8),
      dl_load_time timestamp,
      constraint pk_tm_order_his_id primary key( parent_order_id, shopper_nickname )
      )
      distributed by (parent_order_id, shopper_nickname)

  insert_edw_from_ods_query:
    insert into edw.f_tm_order_his(
      parent_order_id,
      shopper_nickname,
      shopper_alipay_account,
      payment_no,
      payment_detail,
      payable_amount,
      postage,
      paid_points,
      total_amount,
      rebated_points,
      actual_payment_amount,
      actual_paid_points,
      order_status,
      shopper_comments,
      cosignee_name,
      consinee_address,
      type_of_delivery,
      consinee_telephone,
      consinee_mobile,
      order_create_time,
      order_payment_time,
      product_title,
      product_category,
      total_pieces,
      shopid,
      shop_name,
      dl_batch_date,
      dl_load_time
    )
    select
      parent_order_id,
      shopper_nickname,
      shopper_alipay_account,
      payment_no,
      payment_detail,
      case when trim(payable_amount) ~ '^\d+$' then payable_amount::decimal(17,6) else null::decimal(17,6) end as payable_amount,
      case when trim(postage) ~ '^\d+$' then postage::decimal(17,6) else null::decimal(17,6) end as postage,
      case when trim(paid_points) ~ '^\d+$' then paid_points::decimal(11) else null::decimal(11) end as paid_points,
      case when trim(total_amount) ~ '^\d+$' then total_amount::decimal(11) else null::decimal(11) end as total_amount,
      case when trim(rebated_points) ~ '^\d+$' then rebated_points::decimal(11) else null::decimal(11) end as rebated_points,
      case when trim(actual_payment_amount) ~ '^\d+$' then actual_payment_amount::decimal(11) else null::decimal(11) end as actual_payment_amount,
      case when trim(actual_paid_points) ~ '^\d+$' then actual_paid_points::decimal(11) else null::decimal(11) end as actual_paid_points,
      order_status,
      shopper_comments,
      cosignee_name,
      consinee_address,
      type_of_delivery,
      consinee_telephone,
      consinee_mobile,
      to_timestamp(order_create_time,'YYYY-MM-DD HH24:MI:SS'),
      to_timestamp(order_payment_time,'YYYY-MM-DD HH24:MI:SS'),
      product_title,
      product_category,
      case when trim(total_pieces) ~ '^\d+$' then total_pieces::decimal(17,6) else null::decimal(17,6) end as total_pieces,
      shopid,
      shop_name,
      dl_batch_date,
      now()
    from ods.r_tm_order_his;
